<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>在Anaconda3中运行python2</title>
    <url>/2020/02/01/%E5%9C%A8Anaconda3%E4%B8%AD%E8%BF%90%E8%A1%8Cpython2/</url>
    <content><![CDATA[<hr>
<h2 id="Anaconda简介">Anaconda简介</h2>
<p>Anaconda 是一个用于科学计算的 Python 发行版，支持 Linux, Mac, Windows, 包含了众多流行的科学计算、数据分析的 Python 包。</p>
<p>Anaconda 能完美解决Python2 和 Python3 的共存问题。</p>
<p>同时解决了Python开发者的两大痛点。</p>
<a id="more"></a>
<p>第一：提供包管理，功能类似于<code>pip</code>，Windows 平台安装第三方包经常失败的场景得以解决。<br>
第二：提供虚拟环境管理，功能类似于 <code>virtualenv</code>，解决了多版本Python并存问题。</p>
<p><code>conda</code> 是 Anaconda 下用于包管理和环境管理的命令行工具，是 <code>pip</code> 和 <code>vitualenv</code> 的组合。安装成功后 <code>conda</code> 会默认加入到环境变量中，因此可直接在命令行窗口运行 <code>conda</code> 命令。对虚拟环境进行创建、删除等操作需要使用<code>conda</code>命令。</p>
<h2 id="使用Anaconda3运行python2的原因">使用Anaconda3运行python2的原因</h2>
<p>Anaconda3和Anaconda2可以同时安装，一般也不会出大问题。但是安装过程和版本切换，处理环境变量和兼容性问题上却很麻烦。<br>
目前方便的方法是，只装Anaconda3，同时使用conda虚拟环境。这也是Anaconda建议的方式。</p>
<h2 id="在Anaconda3下创建python2虚拟环境">在Anaconda3下创建python2虚拟环境</h2>
<h3 id="安装Anaconda3">安装Anaconda3</h3>
<ol>
<li>
<p>Anaconda 安装包可以到 <a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/" target="_blank" rel="noopener">https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/</a> 下载。安装时注意勾选环境变量。</p>
</li>
<li>
<p>Anaconda 的镜像地址默认在国外，用 <code>conda</code> 安装包的时候会很慢，目前可用的国内镜像源地址是清华大学提供的。各系统都可以通过修改用户目录下的<code>.condarc</code>文件来更换成清华源：<br>
<img src="/2020/02/01/%E5%9C%A8Anaconda3%E4%B8%AD%E8%BF%90%E8%A1%8Cpython2/source.png" alt></p>
</li>
</ol>
<blockquote>
<p>详情访问 <a href="https://mirror.tuna.tsinghua.edu.cn/help/anaconda/" target="_blank" rel="noopener">https://mirror.tuna.tsinghua.edu.cn/help/anaconda/</a></p>
</blockquote>
<h3 id="使用conda创建python2虚拟环境">使用conda创建python2虚拟环境</h3>
<p>以下步骤在命令行，Windows PowerShell或Anaconda Prompt中实现</p>
<ol>
<li>创建python2虚拟环境<br>
切换到需要创建虚拟环境的目录</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda create -n Python27 python&#x3D;2.7</span><br></pre></td></tr></table></figure>
<p><strong>注意：</strong></p>
<ul>
<li>
<p><code>Python27</code>是环境名， 可替换</p>
</li>
<li>
<p>创建带有特定包的虚拟环境<code>conda create -n Python27 python=2.7 scipy</code></p>
</li>
<li>
<p>创建不带任何包的纯净环境<code>conda create --no-default-packages -n Python27 python=2.7</code></p>
</li>
<li>
<p>可在<code>.condarc</code>中<code>create_default_packages</code>设置创建环境时的默认安装包，如以下：<br>
<img src="/2020/02/01/%E5%9C%A8Anaconda3%E4%B8%AD%E8%BF%90%E8%A1%8Cpython2/default.png" alt></p>
</li>
</ul>
<p><code>conda</code>弹出是否继续时，输入<code>y</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">proceed ([y]&#x2F;n)?</span><br></pre></td></tr></table></figure>
<p>默认情况下， 虚拟环境安装在<code>conda</code>目录的<code>envs</code>目录下。如果想要更改安装目录可以使用<code>conda create -h</code>命令查看更改方式。<br>
<img src="/2020/02/01/%E5%9C%A8Anaconda3%E4%B8%AD%E8%BF%90%E8%A1%8Cpython2/cr.png" alt></p>
<ol start="2">
<li>激活虚拟环境</li>
</ol>
<p>激活环境包含两个主要功能：向环境变量中添加条目以及运行环境中可能包含的任何激活脚本。通过这些脚本，Anaconda包可以设置操作所必须的任意环境变量。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda activate Python27</span><br></pre></td></tr></table></figure>
<p><strong>注意：</strong></p>
<ul>
<li>将<code>Python27</code>替换为你设置的环境名或者是目录路径</li>
<li><code>conda activate</code>和<code>conda deactivate</code>只可以在conda4.6及之后版本使用。之前版本使用<code>activate</code>和<code>deactivate</code>。查看conda版本使用命令<code>conda --version</code>或者<code>conda -V</code>。<br>
<img src="/2020/02/01/%E5%9C%A8Anaconda3%E4%B8%AD%E8%BF%90%E8%A1%8Cpython2/condav.png" alt></li>
</ul>
<ol start="3">
<li>终止虚拟环境运行/返回基础环境(Anacoda3)</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda deactivate</span><br></pre></td></tr></table></figure>
<p><strong>注意：</strong></p>
<ul>
<li>如果仅仅是想返回基础环境，更好的的方法是使用<code>conda activate</code>，其后不加具体的虚拟环境。之所以不使用<code>deactivate</code>的原因是，你可能会不小心在基础环境中使用<code>conda deactivate</code>，这会导致无法运行<code>conda</code>命令。不过这仅限于在这个shell中无法运行，你可以重新打开一个。</li>
<li>查看当前存在哪些虚拟环境<code>conda env list</code>或者<code>conda info --envs</code>。目前所处的环境被*号标注。<br>
<img src="/2020/02/01/%E5%9C%A8Anaconda3%E4%B8%AD%E8%BF%90%E8%A1%8Cpython2/list.png" alt></li>
<li>查看虚拟环境中存在那些包：如果没有激活，使用<code>conda list -n Python27</code>。如果已经激活，使用<code>conda list</code>。确认是否已安装某个包（如scipy），使用<code>conda list -n Python27 scipy</code>。</li>
</ul>
<ol start="4">
<li>删除虚拟环境</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda remove -n Python27 --all</span><br></pre></td></tr></table></figure>
<p><img src="/2020/02/01/%E5%9C%A8Anaconda3%E4%B8%AD%E8%BF%90%E8%A1%8Cpython2/re.png" alt><br>
5. 分享虚拟环境<br>
你可能希望与其他人共享你的虚拟环境。例如，这样他们可以重新创建您已经完成的测试，或者让他们能够快速复制环境及其所有包和版本，可以给他们一个<code>environment.yml</code>文件的副本。</p>
<ul>
<li>激活环境<code>conda activate Python27</code></li>
<li>将当前活跃的环境导入到文件中<code>conda env export &gt; Python27_env.yml</code></li>
<li>将<code>Python27_env.yml</code>发送给他人<br>
<img src="/2020/02/01/%E5%9C%A8Anaconda3%E4%B8%AD%E8%BF%90%E8%A1%8Cpython2/exp1.png" style="zoom: 150%;"></li>
</ul>
<ol start="6">
<li>从<code>environment.yml</code>文件中创建虚拟环境</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda env create -f Python27_env.yml</span><br></pre></td></tr></table></figure>
<blockquote>
<p>更多信息访问https://conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html#create-env-file-manually</p>
</blockquote>
<h3 id="在IDE中切换编译器">在IDE中切换编译器</h3>
<p>以vscode为例，其他编辑器方法相似</p>
<ol>
<li>选择编译器<br>
<img src="/2020/02/01/%E5%9C%A8Anaconda3%E4%B8%AD%E8%BF%90%E8%A1%8Cpython2/vs1.png" alt="vs1"></li>
<li>选择文件夹<br>
<img src="/2020/02/01/%E5%9C%A8Anaconda3%E4%B8%AD%E8%BF%90%E8%A1%8Cpython2/vs2.png" alt="vs2"></li>
<li>选择环境<br>
<img src="/2020/02/01/%E5%9C%A8Anaconda3%E4%B8%AD%E8%BF%90%E8%A1%8Cpython2/vs3.png" alt="vs3"></li>
</ol>
<p>Anaconda中的IDE<br>
<img src="/2020/02/01/%E5%9C%A8Anaconda3%E4%B8%AD%E8%BF%90%E8%A1%8Cpython2/ide.png" alt="ide"><br>
直接打开使用即可</p>
]]></content>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/01/31/article-title/</url>
    <content><![CDATA[<p>Here is Qingrun’s personal blog website.</p>
<a id="more"></a>
<p>Several days ago, a thought of building my own blog flashed through my mind. So here it is.<br>
I always browse through loads of information to satisfy my pure curiosity while nothing was gained or absorbed into my mind. Undoubtedly, Much information is superficial and meaningless while others are more or less proper to dive deeper, such as mathematics, python and body-building, which I should not let them go away easily.</p>
<p>As a newbie to python, I encountered masses of problems like the installation failure of libs and unexpected codes errors. A recent downloading of NLTK datasets and corpora was a torturing experience but the process of finding solutions brought me a sense of achievement. Since I am not majoring in field, I easily forget the solutions after a period of time and will be trapped by similar problems. Taking a record for future reference could help, to me or my friends.<br>
This web is constructed with Git Pages and Hexo and the theme is cloned from NexT, a open source project on Github. I gave up Jekyll which is recommended by Git Pages, because it is programmed in Ruby and unfriendly to Windows users. The alternative option is Hexo, which is suggested in a tutorial by a CS graduate of ECNU. I also learned a lot from it but I do not like his blog style/theme. With the ready-made theme of NexT, I made some moderate modification on the <code>_config</code> file and then pushed it to Git Pages. Done!<br>
Many websites provide blog services, like <a href="http://Jianshu.com" target="_blank" rel="noopener">Jianshu.com</a>, <a href="http://weibo.com" target="_blank" rel="noopener">weibo.com</a>, but I just want to build my own which is highly customized and without any limitations imposed by the service provider. A personal website would make me look like more professional~ hhhhh. This blog is still under further improvement. The comments plugin, Disqus is blocked by the Great Fire Wall and a replacement will be put into place soon. This web cannot be searched in Baidu because its host is not within the country and Baidu spider is blocked.<br>
I still have no idea on what will be updated. I am sure it won’t be a diary-like thing, depicting feeling or emotions. Naive! The content will be objective I believe, something like how to build a website, how to cross the wall(fan qiang) deftly. I even noticed some people have put their CV on their website…</p>
]]></content>
      <tags>
        <tag>intro</tag>
      </tags>
  </entry>
</search>
